
Genera código Python que implemente el siguiente plan:
Plan: Aquí tienes un plan paso a paso para generar un archivo CSV con los primeros 33 números primos, utilizando el archivo `code (1).py` provisto:

**Paso 1: Entendimiento del Código Existente (code (1).py)**

*   **Objetivo:** Comprender la función `es_primo` y cómo se usa para identificar números primos.
*   **Acción:**  Revisa el código del archivo `code (1).py`.  Identifica la función `es_primo` y analiza su lógica.  Deberías entender cómo funciona el algoritmo para determinar si un número es primo (generalmente, verificando divisibilidad hasta la raíz cuadrada del número).

**Paso 2: Creación del Script Principal (Nuevo código o modificación de `code (1).py` según sea necesario)**

*   **Objetivo:**  Desarrollar un script que:
    1.  Utilice la función `es_primo` para encontrar números primos.
    2.  Almacene los primeros 33 números primos encontrados en una lista.
    3.  Guarde los números primos en un archivo CSV.
*   **Acción:**
    1.  **Importar Módulos:** Importa el módulo `math` (ya que el archivo `code (1).py` ya lo importa, no es necesario agregar una nueva importación). Importa el módulo `csv`.
    2.  **Definir la función `generar_primos_csv` (si es necesario):** Si no está en el archivo proporcionado, crea una función. Esta función será la encargada de:
        *   Inicializar una lista vacía `primos`.
        *   Inicializar un contador `numero` a 2 (el primer número primo).
        *   Usar un bucle `while` para iterar hasta que la lista `primos` contenga 33 elementos.
        *   Dentro del bucle:
            *   Usar la función `es_primo` para verificar si `numero` es primo.
            *   Si `es_primo` devuelve `True`, agregar `numero` a la lista `primos`.
            *   Incrementar `numero` en 1.
        *   Crear un archivo CSV (usando `csv.writer`) y escribir los números primos en él.

    3.  **Llamar a la función:**  Después de definir la función `generar_primos_csv`, llama a la función.

**Paso 3: Implementación del Escritor CSV**

*   **Objetivo:**  Implementar la escritura de los números primos en un archivo CSV.
*   **Acción:**
    1.  Dentro de la función `generar_primos_csv` (o en el lugar apropiado del script), abre un archivo en modo escritura (`"w"`) con el nombre deseado (por ejemplo, "primos.csv").
    2.  Crea un objeto `csv.writer` asociado al archivo.
    3.  Usa el método `writerow()` del objeto `csv.writer` para escribir cada número primo en una fila separada. Puedes escribir cada número en una columna o en la misma columna separada por comas.
    4.  Cierra el archivo después de escribir todos los números primos.

**Paso 4: Prueba y Ejecución**

*   **Objetivo:**  Probar el código y generar el archivo CSV con los números primos.
*   **Acción:**
    1.  Guarda el código modificado (o el nuevo script).
    2.  Ejecuta el script Python.
    3.  Verifica que el archivo "primos.csv" (o el nombre que hayas elegido) se haya creado y contenga los primeros 33 números primos correctamente.

**Código de Ejemplo (Basado en la información y archivo provisto):**

```python
import math
import csv

def es_primo(numero):
    """
    Verifica si un número dado es primo.

    Args:
        numero: El número a verificar.

    Returns:
        True si el número es primo, False en caso contrario.
    """
    if numero <= 1:
        return False
    for i in range(2, int(math.sqrt(numero)) + 1):
        if numero % i == 0:
            return False
    return True

def generar_primos_csv(nombre_archivo="primos.csv"):
    """
    Genera un archivo CSV con los primeros 33 números primos.

    Args:
        nombre_archivo: El nombre del archivo CSV a crear.
    """
    primos = []
    numero = 2
    while len(primos) < 33:
        if es_primo(numero):
            primos.append(numero)
        numero += 1

    with open(nombre_archivo, "w", newline="") as archivo_csv:
        escritor_csv = csv.writer(archivo_csv)
        for primo in primos:
            escritor_csv.writerow([primo]) # Cada primo en una fila separada.

generar_primos_csv()
```

**Explicación del Código de Ejemplo:**

1.  **Importaciones:**  Importa `math` (ya provisto en el archivo de origen) y `csv`.
2.  **`es_primo(numero)`:**  Es la función que verifica la primalidad, tomada del archivo `code(1).py`.
3.  **`generar_primos_csv(nombre_archivo)`:**
    *   Inicializa una lista `primos` para almacenar los números primos encontrados.
    *   Establece el `numero` inicial en 2.
    *   El bucle `while` continúa hasta que la lista `primos` tenga 33 elementos.
    *   Dentro del bucle, usa `es_primo` para verificar si el número actual es primo. Si es primo, se agrega a la lista `primos`.
    *   Incrementa `numero` en 1.
    *   Abre el archivo CSV especificado en modo escritura (`"w"`) con `newline=""` para evitar problemas de espaciado.
    *   Crea un objeto `csv.writer`.
    *   Itera a través de la lista `primos` y usa `writerow([primo])` para escribir cada número primo en una fila separada dentro del archivo CSV.  El argumento es una lista de un solo elemento (el número primo),  que el escritor CSV tratará como una fila.
    *   Cierra el archivo automáticamente al salir del bloque `with`.
4.  **`generar_primos_csv()`:**  La función se llama para generar el archivo CSV.

Este plan, junto con el código de ejemplo, te permitirá completar la tarea exitosamente. Asegúrate de adaptar el código de ejemplo si necesitas cambiar la ubicación o el formato del archivo CSV.

Manifiesto de archivos:
{}
Archivos disponibles: code (1).py
Requisitos:
- Crear archivos en la raíz.
- Utilizar el marcador `{nombre_archivo}` para indicar dónde se insertará la explicación detallada.
- Incluir comentarios que expliquen la funcionalidad.
Solo usa los archivos proporcionados.
